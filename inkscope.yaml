- hosts: inkscope
  become: yes
  tasks:
    - include_vars:
        dir: test_vars

    - name: 1 - Installing Python
      package:
        name: python
        state: latest

    - block:
      - name: 2 - Installing apache2 (Debian)
        apt:
          name: apache2
          state: latest
      - name: Starting apache2
        service:
          name: apache2
          state: started
      when: ansible_os_family == 'Debian'
    - block:
      - name: 2 - Installing httpd (RedHat)
        yum:
          name: httpd
          state: latest
      - name: Starting httpd
        service:
          name: httpd
          state: started
      when: ansible_os_family == 'RedHat'

    - name: 3 - Installing Apache module proxy_http
      apache2_module:
        name: proxy_http
        state: present

    - name: 4 - Installing Apache module for wsgi (Debian)
      package:
        name: libapache2-mod-wsgi
        state: latest
      when: ansible_os_family == 'Debian'
    - name: 4 - Installing Apache module for wsgi (RedHat)
      package:
        name: mod_wsgi
        state: latest
      when: ansible_os_family == 'RedHat'

    - name: 5 - Installing MongoDB
      package:
        name: mongodb
        state: latest


    - name: 6 - Fetching Inkscope files from Github
      git:
        repo: https://github.com/inkscope/inkscope
        dest: "{{ working_dir }}"

    - name: 6a - Getting last commit date
      shell: git log -1 --format=%cD
      args:
        chdir: "{{ working_dir }}"
      register: last_commit

    - debug:
        msg: "Last commit: {{ last_commit.stdout_lines }}"

    - name: 7 - Installing python-pip
      package:
        name: python-pip
        state: latest

    - name: 8 - Installing python modules
      pip:
        requirements: "{{ working_dir }}/requirements.txt"
        state: present

    - name: 9a - Copying inkscope files to /var/www/inkscope
      command: "cp -R {{ working_dir }}/inkscopeViz/ /var/www/inkscope"
    - name: 9b - Copying inkscope files to /var/www/inkscope
      command: "cp -R {{ working_dir }}/inkscopeCtrl/ /var/www/inkscope"
    - name: 9c - Copying inkscope files to /var/www/inkscope
      command: "cp -R {{ working_dir }}/index.html /var/www/inkscope/index.html"

    - name: 10a - Configuring Apache (Debian)
      template:
        src: ./templates/inkscope-vhost.conf.j2
        dest: /etc/apache2/sites-available/inkscope.conf
        owner: root
        group: root
        mode: 0644
        backup: yes
      when: ansible_os_family == 'Debian'

    - name: 10b - Enabling inkscope (Debian)
      shell: a2ensite inkscope
      when: ansible_os_family == 'Debian'

    - name: 10c - Disabling default (Debian)
      shell: a2dissite 000-default
      when: ansible_os_family == 'Debian'

    - name: 10d - Configuring Apache (RedHat)
      template:
        src: ./templates/inkscope-vhost.conf.j2
        dest: /etc/httpd/conf.d/inkscope.conf
        owner: root
        group: root
        mode: 0644
        backup: yes
      when: ansible_os_family == 'RedHat'

    - name: 11a - Creating inkscope.conf
      template:
        src: ./templates/inkscope.conf.j2
        dest: "{{ working_dir }}/inkscope.conf"
        owner: root
        group: root
        mode: 0644
        backup: yes

    - name: 11b - Creating /opt/inkscope
      file:
        path: "/opt/inkscope"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: 11c - Creating /opt/inkscope/etc
      file:
        path: "/opt/inkscope/etc"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: 11d - Copying inkscope.conf to /opt/inkscope/etc
      command: "cp -R {{ working_dir }}/inkscope.conf /opt/inkscope/etc"


    - name: 12a - Creating /opt/inkscope/bin
      file:
        path: "/opt/inkscope/bin"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: 12b - Copying binaries to /opt/inkscope/bin
      command: "cp -Rp {{ working_dir }}/inkscopeProbe/cephprobe.py /opt/inkscope/bin"
    - name: 12c - Copying binaries to /opt/inkscope/bin
      command: "cp -Rp {{ working_dir }}/inkscopeProbe/daemon.py /opt/inkscope/bin"


    - name: 12d - Creating Cephprobe service (link for cephprobe.py)
      file:
        path: /etc/init.d/cephprobe
        src: /opt/inkscope/bin/cephprobe.py
        state: link
    - name: 12e - Creating Cephprobe service (link for daemon.py)
      file:
        path: /etc/init.d/daemon.py
        src: /opt/inkscope/bin/daemon.py
        state: link

    - name: 12f - Enabling Cephprobe service
      service:
        name: cephprobe
        enabled: yes
    - name: 12g - Starting Cephprobe service
      shell: service cephprobe restart
      args:
        warn: no

    - name: 13a - Verifying Ceph presence
      shell: ceph --version

    - name: 13b - Verifying Ceph configuration file presence
      stat:
        path: "{{ ceph_conf }}"
      register: result
      failed_when: "result.stat.exists == False"

    - name: 13c - Creating keyring for RestApi
      shell: "ceph auth get-or-create client.restapi mds 'allow' osd 'allow *' mon 'allow *' > /etc/ceph/{{ cluster }}.client.restapi.keyring"
      args:
        creates: "/etc/ceph/{{ cluster }}.client.restapi.keyring"

    - name: 13d - Modifying Ceph configuration file
      blockinfile:
        dest: "{{ ceph_conf }}"
        block: "{{ lookup('template', 'templates/ceph.conf.j2') }}"
        state: present

    - name: 14 - Restarting Apache (Debian)
      service:
        name: apache2
        state: restarted
      when: ansible_os_family == 'Debian'
    - name: 14 - Restarting Apache (RedHat)
      service:
        name: httpd
        state: restarted
      when: ansible_os_family == 'RedHat'